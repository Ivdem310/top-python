# tcp/ip udp http
"""
сокеты sockets
tcp transmission control protocol
протокол управления передачей
клиент - серверная архитектура

особенности:
установка соединения
гарантирует доставку данных
управление потоком
контроль ошибок

особенности2:
может быть медленнее чем udp или другие протоколы
поток байтов
соединение нужно закрыть

сокеты (sockets)
сервер - слушаем
клиент - подключение

try:
    clint_sock.connect(('localhost', 8000))
except ConnectionRefusedError:
    print('сервер не отвечает')

enconde - кодировка
decode - декодирование

методы socket:
bind - связать
listen - слушать
accept - принять
connect - подключиться
send - отправить
recv - получить
"""


