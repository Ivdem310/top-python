Структура папки: C:\Users\Ефимов\pythonProjects\top-python\online\django_blog\django_blog\users

- __init__.py
    [Содержимое файла: __init__.py]
- admin.py
    [Содержимое файла: admin.py]
    from django.contrib import admin
    
    # Register your models here.
- apps.py
    [Содержимое файла: apps.py]
    from django.apps import AppConfig
    
    
    class UsersConfig(AppConfig):
        default_auto_field = 'django.db.models.BigAutoField'
        name = 'django_blog.users'
    
[Папка] migrations/
    - __init__.py
        [Содержимое файла: __init__.py]
- models.py
    [Содержимое файла: models.py]
    from django.db import models
    
    # Create your models here.
[Папка] templates/
    - med_info.html
        [Содержимое файла: med_info.html]
        {% extends "base.html" %}
        {% block content %}
            <h1>Медицинские данные</h1>
            <p>User ID: {{ user_id }}, Pet ID: {{ pet_id }}</p>
            <p>Сформированная ссылка: {{ type }}</p>
        {% endblock %}
- tests.py
    [Содержимое файла: tests.py]
    from django.test import TestCase
    from django.urls import reverse
    
    class UsersTest(TestCase):
        def test_users_list(self):
            response = self.client.get(reverse('users'))
            self.assertEqual(response.status_code, 200)
- urls.py
    [Содержимое файла: urls.py]
    from django.urls import path
    from . import views
    
    urlpatterns = [
        path('', views.users_view, name='users'),
        #path('<int:user_id>/pets/<int:pet_id>/med_info/', views.pet_med_info_view),
        path(
            '<int:user_id>/pets/<int:pet_id>/med_info/',
            views.pet_med_info_view,
            name='pet_med_info',
        ),
    ]
- views.py
    [Содержимое файла: views.py]
    from django.shortcuts import render
    from django.http import HttpResponse
    from django.urls import reverse
    
    def users_view(request):
        return HttpResponse("Users list (from project app)")
    
    def pet_med_info_view(request, user_id, pet_id):
        return render(
            request,
            'med_info.html',
            context={'user_id': user_id, 'pet_id': pet_id, 'type': f'{reverse("pet_med_info", kwargs={"user_id": user_id, "pet_id": pet_id})}'},
        )
